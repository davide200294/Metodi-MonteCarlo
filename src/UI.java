
import java.awt.event.ActionEvent;
import static java.lang.Math.log;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author davidetumminello&&giovanniguerrieri
 */
public class UI extends javax.swing.JFrame {
    
    float risultati[][] = new float[18][2];
    double risultati1[][] = new double[18][2];
    
    public UI() {
        initComponents();
        //enableButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupFunction = new javax.swing.ButtonGroup();
        linear_fun = new javax.swing.JRadioButton();
        exp_fun = new javax.swing.JRadioButton();
        log_fun = new javax.swing.JRadioButton();
        expLog_fun = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldA = new javax.swing.JTextField();
        jTextFieldB = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        confidence_interval = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(274, 360));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        buttonGroupFunction.add(linear_fun);
        linear_fun.setLabel("y = x");

        buttonGroupFunction.add(exp_fun);
        exp_fun.setText("y = x^2");

        buttonGroupFunction.add(log_fun);
        log_fun.setText("y = log(x)");

        buttonGroupFunction.add(expLog_fun);
        expLog_fun.setText("y = log^2(x)");

        jLabel1.setText("A");

        jLabel2.setText("B");

        jButton1.setText("Calcola");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Intervallo di Confidenza ");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "0.01", "0.05", "0.1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        confidence_interval.setViewportView(jList1);

        jLabel3.setText("Estremi della funzione");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addComponent(jTextFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(expLog_fun)
                    .addComponent(log_fun)
                    .addComponent(linear_fun)
                    .addComponent(exp_fun)
                    .addComponent(jLabel4)
                    .addComponent(confidence_interval, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(linear_fun)
                .addGap(15, 15, 15)
                .addComponent(exp_fun)
                .addGap(18, 18, 18)
                .addComponent(log_fun)
                .addGap(26, 26, 26)
                .addComponent(expLog_fun)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(confidence_interval, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(linear_fun.isSelected() || exp_fun.isSelected() || log_fun.isSelected() || expLog_fun.isSelected()){
            if(!jList1.isSelectionEmpty()){
                if(jTextFieldA.getText().length() != 0 && jTextFieldB.getText().length() != 0){
                    if(Integer.parseInt(jTextFieldB.getText())>Integer.parseInt(jTextFieldA.getText())){
                        int a = Integer.parseInt(jTextFieldA.getText());
                        int b = Integer.parseInt(jTextFieldB.getText());
                        int perc = jList1.getSelectedIndex();
                        System.out.println(perc);
                        //int n = Integer.parseInt(TextField_NSM.getText());
                        //frameGraphHitOrMiss();
                        //frameGraphSampleMean();
                        HitOrMiss hom = new HitOrMiss(a, b, perc);
                        SampleMean sm = new SampleMean(a,b, perc);
                        AnthiteticVariable av = new AnthiteticVariable();
                            if(linear_fun.isSelected()){
                                //HoM_result.setText(hom.hitOrMissLinear()+"");
                                //risultati = hom.hitOrMissLinear();
                                risultati = hom.hitOrMiss(3);
                                risultati1 = sm.genera(3);
                                HitOrMissDialog homDialog = new HitOrMissDialog();
                                SampleMeanDialog smDialog = new SampleMeanDialog();
                                FrameChart chart = new FrameChart(risultati, risultati1);
                                homDialog.setRisultati(risultati);
                                smDialog.setRisultati(risultati1);
                                //chart.setRisultati(risultati);
                                sm.setRisultati1(risultati1);
                                av.setRisultati(risultati);
                                //av.setRisultati1(risultati1);
                                av.stampa();
                                av.getCov();
                                av.getVarSM();
                                homDialog.setVisible(true);
                                smDialog.setVisible(true);
                                //chart.setVisible(true);
                                //SM_result.setText(sm.linear()+"");
                            }
                            if(exp_fun.isSelected()){
                                //HoM_result.setText(hom.hitOrMissExp()+"");
                                //risultati = hom.hitOrMissExp();
                                risultati = hom.hitOrMiss(2);
                                risultati1 = sm.genera(2);
                                HitOrMissDialog homDialog = new HitOrMissDialog();
                                SampleMeanDialog smDialog = new SampleMeanDialog();
                                FrameChart chart = new FrameChart(risultati, risultati1);
                                //frameGraphHitOrMiss();
                                homDialog.setVisible(true);
                                homDialog.setRisultati(risultati);
                                smDialog.setVisible(true);
                                smDialog.setRisultati(risultati1);
                                //chart.setRisultati(risultati);
                                sm.setRisultati1(risultati1);
                                av.setRisultati(risultati);
                                //av.setRisultati1(risultati1);
                                av.stampa();
                                av.getCov();
                                av.getVarSM();
                                //chart.setVisible(true);
                                //SM_result.setText(sm.exponential()+"");
                            }
                            if(log_fun.isSelected()){
                                //HoM_result.setText(hom.hitOrMissLog()+"");
                                //risultati = hom.hitOrMissLog();
                                risultati = hom.hitOrMiss(1);
                                risultati1 = sm.genera(1);
                                HitOrMissDialog homDialog = new HitOrMissDialog();
                                SampleMeanDialog smDialog = new SampleMeanDialog();
                                FrameChart chart = new FrameChart(risultati, risultati1);
                                //frameGraphHitOrMiss();
                                homDialog.setVisible(true);
                                smDialog.setVisible(true);
                                homDialog.setRisultati(risultati);
                                smDialog.setRisultati(risultati1);
                                //chart.setRisultati(risultati);
                                sm.setRisultati1(risultati1);
                                av.setRisultati(risultati);
                                //av.setRisultati1(risultati1);
                                av.stampa();
                                av.getCov();
                                av.getVarSM();
                                //chart.setVisible(true);
                                //SM_result.setText(sm.logarithmic()+"");
                            }
                            if(expLog_fun.isSelected()){
                                //HoM_result.setText(hom.hitOrMissExpLog()+"");
                                //risultati = hom.hitOrMissExpLog();
                                risultati = hom.hitOrMiss(0);
                                risultati1 = sm.genera(0);
                                HitOrMissDialog homDialog = new HitOrMissDialog();
                                SampleMeanDialog smDialog = new SampleMeanDialog();
                                FrameChart chart = new FrameChart(risultati, risultati1);
                                //frameGraphHitOrMiss();
                                homDialog.setVisible(true);
                                homDialog.setRisultati(risultati);
                                smDialog.setVisible(true);
                                smDialog.setRisultati(risultati1);
                                //chart.setRisultati(risultati);
                                sm.setRisultati1(risultati1);
                                av.setRisultati(risultati);
                                //av.setRisultati1(risultati1);
                                av.stampa();
                                av.getCov();
                                av.getVarSM();
                                //chart.setVisible(true);
                                //SM_result.setText(sm.expLog()+"");
                        }
                    }
                    else  JOptionPane.showMessageDialog(null, "L'estremo B è minore dell'estremo A");
                }
                else JOptionPane.showMessageDialog(null, "Campi non selezionati correttamente");
            }
            else JOptionPane.showMessageDialog(null, "Campi non selezionati correttamente");
        }
        else JOptionPane.showMessageDialog(null, "Campi non selezionati correttamente");
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        
    }//GEN-LAST:event_formKeyReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    public void frameGraphHitOrMiss(){
        FrameChart chart = new FrameChart(risultati, risultati1);
    }
    /*public void frameGraphSampleMean(){
        FrameGraphHitOrMiss chart = new FrameGraphHitOrMiss(risultati);
    }*/
    
    public float[][] getRisultati(){
        for(int i=0;i<5;i++)
            System.out.println("in method: "+risultati[i][0]);
        return risultati;
    }
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupFunction;
    private javax.swing.JScrollPane confidence_interval;
    private javax.swing.JRadioButton expLog_fun;
    private javax.swing.JRadioButton exp_fun;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JTextField jTextFieldA;
    private javax.swing.JTextField jTextFieldB;
    private javax.swing.JRadioButton linear_fun;
    private javax.swing.JRadioButton log_fun;
    // End of variables declaration//GEN-END:variables
}
